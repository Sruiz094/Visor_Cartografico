{"id":"../node_modules/leaflet.browser.print/index.html","dependencies":[{"name":"./dist/leaflet.browser.print.js","dynamic":true,"resolved":"/home/linux/CURSO_DESARROLLO_SOFTWARE/PROYECTO_INTEGRADOR/Geoportal/node_modules/leaflet.browser.print/dist/leaflet.browser.print.js","parent":"/home/linux/CURSO_DESARROLLO_SOFTWARE/PROYECTO_INTEGRADOR/Geoportal/node_modules/leaflet.browser.print/index.html"},{"name":"_css_loader","parent":"/home/linux/CURSO_DESARROLLO_SOFTWARE/PROYECTO_INTEGRADOR/Geoportal/node_modules/leaflet.browser.print/index.html","resolved":"/home/linux/CURSO_DESARROLLO_SOFTWARE/PROYECTO_INTEGRADOR/Geoportal/node_modules/parcel-bundler/src/builtins/css-loader.js"},{"name":"/home/linux/CURSO_DESARROLLO_SOFTWARE/PROYECTO_INTEGRADOR/Geoportal/package.json","includedInParent":true,"mtime":1711040260330},{"name":"/home/linux/CURSO_DESARROLLO_SOFTWARE/PROYECTO_INTEGRADOR/Geoportal/node_modules/leaflet.browser.print/package.json","includedInParent":true,"mtime":1710984133207}],"generated":{"html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <title>Leaflet browser print plugin with custom print Layer and content</title>\r\n  <meta charset=\"utf-8\">\r\n\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@latest/dist/leaflet.css\">\r\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@geoman-io/leaflet-geoman-free@latest/dist/leaflet-geoman.css\">\r\n  <link rel=\"stylesheet\" href=\"https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.css\">\r\n  <link rel=\"stylesheet\" href=\"https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.Default.css\">\r\n  <style>html, body {\r\n      width: 100%;\r\n      height: 100%;\r\n      margin: 0px;\r\n      padding: 0px;\r\n    }\r\n\r\n    #map {\r\n      width: 80%;\r\n      margin: auto;\r\n      height: 70%;\r\n    }</style>\r\n</head>\r\n\r\n<body>\r\n<h1 class=\"title\" leaflet-browser-print-content=\"\">Leaflet Browser print TITLE</h1>\r\n<h3 class=\"sub-content\" leaflet-browser-print-content=\"\">Leaflet browser print plugin for map printing with additional\r\n  controls and content</h3>\r\n<div id=\"map\"></div>\r\n<table leaflet-browser-print-pages=\"\">\r\n  <thead>\r\n  <tr>\r\n    <th>Option</th>\r\n    <th>Type</th>\r\n    <th>Default</th>\r\n    <th>Description</th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  <tr>\r\n    <td>title</td>\r\n    <td>String</td>\r\n    <td>'Print map'</td>\r\n    <td>Sets the text which appears as the tooltip of the print button</td>\r\n  </tr>\r\n  <tr>\r\n    <td>position</td>\r\n    <td><a href=\"http://leafletjs.com/reference-0.7.7.html#control-position\" rel=\"nofollow\">Leaflet control position</a>\r\n    </td>\r\n    <td>'topleft'</td>\r\n    <td>Position the print button</td>\r\n  </tr>\r\n  <tr>\r\n    <td>printModes</td>\r\n    <td>Array</td>\r\n    <td>[\"Portrait\", \"Landscape\", \"Auto\", \"Custom\"]</td>\r\n    <td>Collection of page print actions</td>\r\n  </tr>\r\n  <tr>\r\n    <td>printModesNames</td>\r\n    <td>Object</td>\r\n    <td>{ Portrait: \"Portrait\", Landscape: \"Landscape\", Auto:\"Auto\", Custom:\"Custom\" }</td>\r\n    <td>Customize each print mode name</td>\r\n  </tr>\r\n  <tr>\r\n    <td>printLayer</td>\r\n    <td><a href=\"http://leafletjs.com/reference-0.7.7.html#tilelayer\" rel=\"nofollow\">Leaflet tile layer</a></td>\r\n    <td>null</td>\r\n    <td>A tiles layer to show instead of all current active tiles layers</td>\r\n  </tr>\r\n  <tr>\r\n    <td>closePopupsOnPrint</td>\r\n    <td>Boolean</td>\r\n    <td>true</td>\r\n    <td>Indicates if we need to force popup closing for printed map</td>\r\n  </tr>\r\n  <tr>\r\n    <td>contentSelector</td>\r\n    <td>String</td>\r\n    <td>\"[leaflet-browser-print-content]\"</td>\r\n    <td>Content selector for printed map, will select and dynamically inject content on printed maps. For full\r\n      functionality please check \"Printing additional content section\"\r\n    </td>\r\n  </tr>\r\n  </tbody>\r\n</table>\r\n<script src=\"https://unpkg.com/leaflet@latest/dist/leaflet.js\"></script>\r\n<script src=\"https://leaflet.github.io/Leaflet.markercluster/dist/leaflet.markercluster-src.js\"></script>\r\n<script src=\"/fb04c5767ee2989079e7042e8f468d2f.js\"></script>\r\n<script src=\"https://leaflet.github.io/Leaflet.markercluster/example/realworld.388.js\">\r\n\r\n</script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/@geoman-io/leaflet-geoman-free@latest/dist/leaflet-geoman.min.js\"></script>\r\n<script>var canvasRenderer = L.canvas();\r\n    //Layers\r\n    var cities = L.markerClusterGroup();\r\n    var arrayOfPoints = [[39.61, -105.02], [39.73, -104.8], [39.77, -105.23]];\r\n\r\n    L.marker(arrayOfPoints[0]).bindPopup('This is Littleton, CO.').addTo(cities);\r\n    L.marker(arrayOfPoints[1]).bindPopup('This is Aurora, CO.').addTo(cities);\r\n    L.marker(arrayOfPoints[2]).bindPopup('This is Golden, CO.').addTo(cities);\r\n\r\n    var p = L.polygon(arrayOfPoints, {color: 'yellow'}).bindTooltip(\"polygon\").bindPopup('This is Polygon, CO.').addTo(cities);\r\n\r\n    var base = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    });\r\n    var wms = L.tileLayer.wms('https://ahocevar.com/geoserver/wms', {\r\n        layers: 'topp:states',\r\n        CQL_FILTER: 'PERSONS > 2000000',\r\n        styles: '',\r\n        format: 'image/png',\r\n        transparent: true,\r\n    });\r\n\r\n    var map = L.map('map', {\r\n        center: [39.73, -104.99],\r\n        zoom: 10,\r\n        layers: [base, cities]\r\n    });\r\n\r\n    var baseLayers = {\r\n        \"Origin\": base,\r\n        \"WMS\": wms\r\n    };\r\n\r\n    var overlays = {\r\n        \"Cities\": cities\r\n    };\r\n\r\n    L.control.layers(baseLayers, overlays).addTo(map);\r\n\r\n\r\n    L.control.scale({position: 'topleft'}).addTo(map);\r\n\r\n    map.pm.addControls({\r\n        position: 'bottomright',\r\n        editControls: false\r\n    });\r\n    var drawnItems = new L.FeatureGroup().addTo(map);\r\n    map.on(\"pm:create\", function (e) {\r\n        var type = e.shape,\r\n            layer = e.layer;\r\n\r\n        if (type === 'Marker') {\r\n            layer.bindPopup('A popup!');\r\n        }\r\n\r\n        drawnItems.addLayer(layer);\r\n    });\r\n\r\n\r\n    map.createPane(\"new-pane\");\r\n    var l = L.layerGroup().addTo(map);\r\n    var green = L.circle([39.73, -104.99], 5000, {\r\n        color: 'green',\r\n        fillColor: 'darkgreen',\r\n        fillOpacity: 0.8,\r\n        pane: \"new-pane\",\r\n        renderer: canvasRenderer\r\n    }).addTo(l);\r\n\r\n\r\n    var customActionToPrint = function (context, mode) {\r\n        return function () {\r\n            window.alert(\"We are printing the MAP. Let's do Custom print here!\");\r\n            context._printCustom(mode);\r\n        }\r\n    };\r\n\r\n    L.control.browserPrint({\r\n        printLayer: L.tileLayer('https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.{ext}', {\r\n            attribution: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n            subdomains: 'abcd',\r\n            minZoom: 1,\r\n            maxZoom: 16,\r\n            ext: 'png'\r\n        }),\r\n        closePopupsOnPrint: false,\r\n        printModes: [\r\n            L.BrowserPrint.Mode.Landscape(\"Tabloid\",{title: \"Tabloid VIEW\"}),\r\n            new L.BrowserPrint.Mode(\"Alert\",{title:\"User specified print action\",pageSize: \"A6\", action: customActionToPrint, invalidateBounds: false}),\r\n            L.BrowserPrint.Mode.Landscape(),\r\n            \"Portrait\",\r\n            L.BrowserPrint.Mode.Auto(\"B4\",{title: \"Auto\"}),\r\n            L.BrowserPrint.Mode.Custom(\"B5\",{title:\"Select area\"})\r\n        ]\r\n    }).addTo(map);\r\n\r\n    L.BrowserPrint.Utils.registerLayer(L.TileLayer.WMS, 'L.TileLayer.WMS', function (layer) {\r\n        console.info(\"Printing WMS layer.\");\r\n        return L.tileLayer.wms(layer._url, layer.options);\r\n    });\r\n\r\n    L.popup({minWidth: 500}).setLatLng(L.latLng(39.73, -104.99)).setContent(\"Leaflet browser print plugin with custom print Layer and content\").openOn(map);\r\n\r\n    var markers = L.markerClusterGroup();\r\n\r\n    for (var i = 0; i < addressPoints.length; i++) {\r\n        var a = addressPoints[i];\r\n        var title = a[2];\r\n        var marker = L.marker(new L.LatLng(a[0], a[1]), {title: title});\r\n        marker.bindPopup(title);\r\n        markers.addLayer(marker);\r\n    }\r\n    map.addLayer(markers);\r\n\r\n    // We are not cloning markercluster to preserve original clasterization behavior and prevent OutOfMemory problems\r\n    L.BrowserPrint.Utils.registerLayer(L.MarkerClusterGroup, 'L.MarkerClusterGroup', function (layer, utils) {\r\n        return layer;\r\n    });\r\n\r\n    // On print end we invalidate markercluster to update markers;\r\n    map.on(L.BrowserPrint.Event.PrintEnd, function (e) {\r\n        map.removeLayer(markers);\r\n        map.addLayer(markers);\r\n    });</script>\r\n\r\n<style>.grid-print-container {\r\n    grid-template: auto 1fr auto / 1fr;\r\n    background-color: orange;\r\n  }\r\n\r\n  .grid-map-print {\r\n    grid-row: 2;\r\n  }\r\n\r\n  .grid-print-container > .title,\r\n  .grid-print-container > .sub-content {\r\n    color: white;\r\n  }\r\n\r\n  .title {\r\n    grid-row: 1;\r\n    justify-self: center;\r\n    text-align: center;\r\n    color: grey;\r\n    box-sizing: border-box;\r\n    margin-top: 0;\r\n  }\r\n\r\n  .sub-content {\r\n    grid-row: 5;\r\n    padding-left: 10px;\r\n    text-align: center;\r\n    color: grey;\r\n    box-sizing: border-box;\r\n  }</style>\r\n<style>[leaflet-browser-print-pages] {\r\n    display: none;\r\n  }\r\n\r\n  .pages-print-container [leaflet-browser-print-pages] {\r\n    display: block;\r\n  }</style>\r\n</body>\r\n\r\n</html>\r\n"},"sourceMaps":null,"error":null,"hash":"0980b721f3fdd0519b9e6bbd56c8dcb7","cacheData":{"env":{}}}